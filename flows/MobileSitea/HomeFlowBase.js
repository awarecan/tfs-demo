// ------------------------------------------------------------------------------
//      This code was generated by handlebars/grunt.
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
// ------------------------------------------------------------------------------

var HomePage = require('./../../pages/MobileSitea/HomePage.js');
var FlowBase = require('./../../flows/baseFlow.js');


function HomeFlowBase(checkUrl, goto) {
    checkUrl = checkUrl || false;
    goto = goto || false;
    this.page = new HomePage();
    FlowBase.call(this, checkUrl, this.page.pageUrl, goto);
};

HomeFlowBase.prototype = new FlowBase();

HomeFlowBase.prototype.constructor = HomeFlowBase;



  // Control functions for FinancialToolsButton
  HomeFlowBase.prototype.click_FinancialToolsButton = function () {
        var that = this;
      this.takeScreenForLog(function(msg){
      that.logDebug('Click FinancialTools Button. '+msg);
    });
    this.page.FinancialToolsButton.click();
    return this;
  };





  // Assert functions for FinancialToolsButton
  HomeFlowBase.prototype.assert_FinancialToolsButton_ContainText = function (text,msgOptions) {
    //this.logDebug('Assert FinancialTools Button contains text: ' + text);
    this.assertIsContain(this.page.FinancialToolsButton.getText(), text,msgOptions,'Assert FinancialTools Button contains text: ' + text);
    return this;
  };

  HomeFlowBase.prototype.assert_FinancialToolsButton_NotContainText = function (text,msgOptions) {
    //this.logDebug('Assert FinancialTools Button does not contain text: ' + text);
    this.assertIsNotContain(this.page.FinancialToolsButton.getText(), text,msgOptions,'Assert FinancialTools Button does not contain text: ' + text);
    return this;
  };

  HomeFlowBase.prototype.assert_FinancialToolsButton_TextMatchPattern = function (pattern,msgOptions) {
    //this.logDebug('Assert FinancialTools Button text match pattern: ' + pattern);
    this.assertIsMatchPattern(this.page.FinancialToolsButton.getText(), pattern, msgOptions, 'Assert FinancialTools Button text match pattern: ' + pattern);
    return this;
  };

  HomeFlowBase.prototype.assert_FinancialToolsButton_Attribute_ContainText = function (attribute, text,msgOptions) {
    //this.logDebug('Assert FinancialTools Button attribute[' + attribute + '] contains text: ' + text);
    this.assertIsContain(this.page.FinancialToolsButton.getAttribute(attribute), text,msgOptions,'Assert FinancialTools Button attribute[' + attribute + '] contains text: ' + text);
    return this;
  };

  HomeFlowBase.prototype.assert_FinancialToolsButton_Attribute_NotContainText = function (attribute,text,msgOptions) {
    //this.logDebug('Assert FinancialTools Button attribute[' + attribute + '] does not contain text: ' + text);
    this.assertIsNotContain(this.page.FinancialToolsButton.getAttribute(attribute), text,msgOptions,'Assert FinancialTools Button attribute[' + attribute + '] does not contain text: ' + text);
    return this;
  };

  HomeFlowBase.prototype.assert_FinancialToolsButton_Attribute_MatchPattern = function (attribute,pattern,msgOptions) {
    //this.logDebug('Assert FinancialTools Button attribute[' + attribute + '] match pattern: ' + pattern);
    this.assertIsMatchPattern(this.page.FinancialToolsButton.getAttribute(attribute), pattern,msgOptions,'Assert FinancialTools Button attribute[' + attribute + '] match pattern: ' + pattern);
    return this;
  };

  HomeFlowBase.prototype.assert_FinancialToolsButton_IsDisplayed = function (msgOptions) {
    //this.logDebug('Assert FinancialTools Button is displayed.');
    this.assertTrue(this.page.FinancialToolsButton.isDisplayed(),msgOptions,'Assert FinancialTools Button is displayed.');
    return this;
  };

  HomeFlowBase.prototype.assert_FinancialToolsButton_IsNotDisplayed = function (msgOptions) {
    //this.logDebug('Assert FinancialTools Button is NOT displayed.');
    this.assertFalse(this.page.FinancialToolsButton.isDisplayed(),msgOptions,'Assert FinancialTools Button is NOT displayed.');
    return this;
  };

  HomeFlowBase.prototype.get_FinancialToolsButton_IsDisplayed = function (callback) {
    this.logDebug('Get FinancialTools Button Displayed state.');
    this.page.FinancialToolsButton.isDisplayed().then(callback);
    return this;
  };

  HomeFlowBase.prototype.assert_FinancialToolsButton_IsEnabled = function (msgOptions) {
    //this.logDebug('Assert FinancialTools Button is enabled.');
    this.assertTrue(this.page.FinancialToolsButton.isEnabled(),msgOptions,'Assert FinancialTools Button is enabled.');
    return this;
  };

  HomeFlowBase.prototype.assert_FinancialToolsButton_IsNotEnabled = function (msgOptions) {
    //this.logDebug('Assert FinancialTools Button is disabled.');
    this.assertFalse(this.page.FinancialToolsButton.isEnabled(),msgOptions,'Assert FinancialTools Button is not enabled.');
    return this;
  };

  HomeFlowBase.prototype.get_FinancialToolsButton_IsEnabled = function (callback) {
    this.logDebug('Get FinancialTools Button Enabled state.');
    this.page.FinancialToolsButton.isEnabled().then(callback);
    return this;
  };

  HomeFlowBase.prototype.assert_FinancialToolsButton_IsExists = function (msgOptions) {
    //this.logDebug('Assert FinancialTools Button is exists.');
    this.assertTrue(this.page.FinancialToolsButton.isPresent(),msgOptions,'Assert FinancialTools Button is exists.');
    return this;
  };

  HomeFlowBase.prototype.assert_FinancialToolsButton_IsNotExists = function (msgOptions) {
    //this.logDebug('Assert FinancialTools Button is NOT exists.');
    this.assertFalse(this.page.FinancialToolsButton.isPresent(),msgOptions,'Assert FinancialTools Button is NOT exists.');
    return this;
  };

  HomeFlowBase.prototype.get_FinancialToolsButton_IsExists = function (callback) {
    this.logDebug('Get if FinancialTools Button is exists.');
    this.page.FinancialToolsButton.isPresent().then(callback);
    return this;
  };


  // Navigation for EstimateMonthlyPaymentLink
  HomeFlowBase.prototype.click_EstimateMonthlyPaymentLink_NavigateTo_EstimateMonthlyPaymentFlow = function () {
        var that = this;
      var EstimateMonthlyPaymentFlow = require('./../../flows/MobileSitea/EstimateMonthlyPaymentFlow.js');
      this.takeScreenForLog(function(msg){
      that.logDebug('Click EstimateMonthlyPayment Link then navigate to EstimateMonthlyPaymentFlow. '+msg);
    });
    this.page.EstimateMonthlyPaymentLink.click();
    return new EstimateMonthlyPaymentFlow(true, false);
  };

  // Control functions for EstimateMonthlyPaymentLink
  HomeFlowBase.prototype.click_EstimateMonthlyPaymentLink = function () {
      var that = this;
      this.takeScreenForLog(function(msg){
      that.logDebug('Click EstimateMonthlyPayment Link. '+msg);
    });
    this.page.EstimateMonthlyPaymentLink.click();
    return this;
  };





  // Assert functions for EstimateMonthlyPaymentLink
  HomeFlowBase.prototype.assert_EstimateMonthlyPaymentLink_ContainText = function (text,msgOptions) {
    //this.logDebug('Assert EstimateMonthlyPayment Link contains text: ' + text);
    this.assertIsContain(this.page.EstimateMonthlyPaymentLink.getText(), text,msgOptions,'Assert EstimateMonthlyPayment Link contains text: ' + text);
    return this;
  };

  HomeFlowBase.prototype.assert_EstimateMonthlyPaymentLink_NotContainText = function (text,msgOptions) {
    //this.logDebug('Assert EstimateMonthlyPayment Link does not contain text: ' + text);
    this.assertIsNotContain(this.page.EstimateMonthlyPaymentLink.getText(), text,msgOptions,'Assert EstimateMonthlyPayment Link does not contain text: ' + text);
    return this;
  };

  HomeFlowBase.prototype.assert_EstimateMonthlyPaymentLink_TextMatchPattern = function (pattern,msgOptions) {
    //this.logDebug('Assert EstimateMonthlyPayment Link text match pattern: ' + pattern);
    this.assertIsMatchPattern(this.page.EstimateMonthlyPaymentLink.getText(), pattern, msgOptions, 'Assert EstimateMonthlyPayment Link text match pattern: ' + pattern);
    return this;
  };

  HomeFlowBase.prototype.assert_EstimateMonthlyPaymentLink_Attribute_ContainText = function (attribute, text,msgOptions) {
    //this.logDebug('Assert EstimateMonthlyPayment Link attribute[' + attribute + '] contains text: ' + text);
    this.assertIsContain(this.page.EstimateMonthlyPaymentLink.getAttribute(attribute), text,msgOptions,'Assert EstimateMonthlyPayment Link attribute[' + attribute + '] contains text: ' + text);
    return this;
  };

  HomeFlowBase.prototype.assert_EstimateMonthlyPaymentLink_Attribute_NotContainText = function (attribute,text,msgOptions) {
    //this.logDebug('Assert EstimateMonthlyPayment Link attribute[' + attribute + '] does not contain text: ' + text);
    this.assertIsNotContain(this.page.EstimateMonthlyPaymentLink.getAttribute(attribute), text,msgOptions,'Assert EstimateMonthlyPayment Link attribute[' + attribute + '] does not contain text: ' + text);
    return this;
  };

  HomeFlowBase.prototype.assert_EstimateMonthlyPaymentLink_Attribute_MatchPattern = function (attribute,pattern,msgOptions) {
    //this.logDebug('Assert EstimateMonthlyPayment Link attribute[' + attribute + '] match pattern: ' + pattern);
    this.assertIsMatchPattern(this.page.EstimateMonthlyPaymentLink.getAttribute(attribute), pattern,msgOptions,'Assert EstimateMonthlyPayment Link attribute[' + attribute + '] match pattern: ' + pattern);
    return this;
  };

  HomeFlowBase.prototype.assert_EstimateMonthlyPaymentLink_IsDisplayed = function (msgOptions) {
    //this.logDebug('Assert EstimateMonthlyPayment Link is displayed.');
    this.assertTrue(this.page.EstimateMonthlyPaymentLink.isDisplayed(),msgOptions,'Assert EstimateMonthlyPayment Link is displayed.');
    return this;
  };

  HomeFlowBase.prototype.assert_EstimateMonthlyPaymentLink_IsNotDisplayed = function (msgOptions) {
    //this.logDebug('Assert EstimateMonthlyPayment Link is NOT displayed.');
    this.assertFalse(this.page.EstimateMonthlyPaymentLink.isDisplayed(),msgOptions,'Assert EstimateMonthlyPayment Link is NOT displayed.');
    return this;
  };

  HomeFlowBase.prototype.get_EstimateMonthlyPaymentLink_IsDisplayed = function (callback) {
    this.logDebug('Get EstimateMonthlyPayment Link Displayed state.');
    this.page.EstimateMonthlyPaymentLink.isDisplayed().then(callback);
    return this;
  };

  HomeFlowBase.prototype.assert_EstimateMonthlyPaymentLink_IsEnabled = function (msgOptions) {
    //this.logDebug('Assert EstimateMonthlyPayment Link is enabled.');
    this.assertTrue(this.page.EstimateMonthlyPaymentLink.isEnabled(),msgOptions,'Assert EstimateMonthlyPayment Link is enabled.');
    return this;
  };

  HomeFlowBase.prototype.assert_EstimateMonthlyPaymentLink_IsNotEnabled = function (msgOptions) {
    //this.logDebug('Assert EstimateMonthlyPayment Link is disabled.');
    this.assertFalse(this.page.EstimateMonthlyPaymentLink.isEnabled(),msgOptions,'Assert EstimateMonthlyPayment Link is not enabled.');
    return this;
  };

  HomeFlowBase.prototype.get_EstimateMonthlyPaymentLink_IsEnabled = function (callback) {
    this.logDebug('Get EstimateMonthlyPayment Link Enabled state.');
    this.page.EstimateMonthlyPaymentLink.isEnabled().then(callback);
    return this;
  };

  HomeFlowBase.prototype.assert_EstimateMonthlyPaymentLink_IsExists = function (msgOptions) {
    //this.logDebug('Assert EstimateMonthlyPayment Link is exists.');
    this.assertTrue(this.page.EstimateMonthlyPaymentLink.isPresent(),msgOptions,'Assert EstimateMonthlyPayment Link is exists.');
    return this;
  };

  HomeFlowBase.prototype.assert_EstimateMonthlyPaymentLink_IsNotExists = function (msgOptions) {
    //this.logDebug('Assert EstimateMonthlyPayment Link is NOT exists.');
    this.assertFalse(this.page.EstimateMonthlyPaymentLink.isPresent(),msgOptions,'Assert EstimateMonthlyPayment Link is NOT exists.');
    return this;
  };

  HomeFlowBase.prototype.get_EstimateMonthlyPaymentLink_IsExists = function (callback) {
    this.logDebug('Get if EstimateMonthlyPayment Link is exists.');
    this.page.EstimateMonthlyPaymentLink.isPresent().then(callback);
    return this;
  };



/*
switch(c.Type)
{
	case ControlTypes.Dropdown:
	  RenderDropdown(page, c);
	  break;
}
*/

module.exports = HomeFlowBase;

